# Simple Flux Dashboard using nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flux-dashboard
  namespace: flux-system
  labels:
    app.kubernetes.io/name: flux-dashboard
    app.kubernetes.io/component: gitops-dashboard
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flux-dashboard
  template:
    metadata:
      labels:
        app: flux-dashboard
    spec:
      serviceAccountName: flux-dashboard
      containers:
      - name: dashboard
        image: nginx:alpine
        ports:
        - containerPort: 80
        volumeMounts:
        - name: html
          mountPath: /usr/share/nginx/html
      volumes:
      - name: html
        configMap:
          name: flux-dashboard-html

---
apiVersion: v1
kind: Service
metadata:
  name: flux-dashboard
  namespace: flux-system
  labels:
    app.kubernetes.io/name: flux-dashboard
    app.kubernetes.io/component: gitops-dashboard
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: flux-dashboard

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: flux-dashboard
  namespace: flux-system

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flux-dashboard
rules:
- apiGroups: [""]
  resources: ["*"]
  verbs: ["get", "list"]
- apiGroups: ["source.toolkit.fluxcd.io"]
  resources: ["*"]
  verbs: ["get", "list"]
- apiGroups: ["kustomize.toolkit.fluxcd.io"]
  resources: ["*"]
  verbs: ["get", "list"]
- apiGroups: ["helm.toolkit.fluxcd.io"]
  resources: ["*"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flux-dashboard
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flux-dashboard
subjects:
- kind: ServiceAccount
  name: flux-dashboard
  namespace: flux-system

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: flux-dashboard-html
  namespace: flux-system
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
        <title>NERV - Flux GitOps Dashboard</title>
        <style>
            body { font-family: monospace; background: #1a1a1a; color: #00ff00; margin: 20px; }
            .header { color: #ff6b35; font-size: 24px; margin-bottom: 20px; }
            .section { margin-bottom: 30px; }
            .status { color: #00ff00; }
            .error { color: #ff4444; }
            pre { background: #2a2a2a; padding: 15px; border-radius: 5px; overflow-x: auto; }
            .command { color: #ffff00; }
        </style>
    </head>
    <body>
        <div class="header">ü§ñ NERV GitOps Platform - Flux Status</div>
        
        <div class="section">
            <h3>Quick Status Check</h3>
            <pre class="command">kubectl get kustomizations -n flux-system</pre>
            <pre class="command">kubectl get helmreleases -A</pre>
            <pre class="command">kubectl get gitrepositories -n flux-system</pre>
        </div>

        <div class="section">
            <h3>Platform Services</h3>
            <div class="status">‚úÖ K3s v1.31 - Kubernetes Cluster</div>
            <div class="status">‚úÖ Flux v2.6.1 - GitOps Automation</div>
            <div class="status">‚úÖ MetalLB v0.15.2 - Load Balancer</div>
            <div class="status">‚úÖ Traefik v37.1.1 - Ingress Controller</div>
            <div class="status">‚úÖ cert-manager v1.18.2 - TLS Automation</div>
            <div class="status">‚úÖ Longhorn v1.9.1 - Storage</div>
        </div>

        <div class="section">
            <h3>GitOps Commands</h3>
            <pre class="command"># Force reconciliation
flux reconcile kustomization flux-system -n flux-system
flux reconcile kustomization apps -n flux-system

# Check specific resource
kubectl describe kustomization apps -n flux-system
kubectl logs -n flux-system -l app=kustomize-controller</pre>
        </div>

        <div class="section">
            <h3>Dashboard Links</h3>
            <a href="https://traefik.nerv.local" style="color: #00ff00;">üåê Traefik Dashboard</a><br>
            <a href="https://longhorn.nerv.local" style="color: #00ff00;">üíæ Longhorn Storage UI</a>
        </div>

        <div class="section">
            <p style="color: #888;">For real-time Flux monitoring, use CLI: <span class="command">flux get all -A</span></p>
        </div>
    </body>
    </html>